'use strict';document.getElementById("image-names").innerHTML="{object name}_{azimuthal angle}_{polar_angle}.ext<br />e.g. testObject_000_000.png<br /><br />A single dropped image is handled as normal mapping.";const dataset=new Dataset(LIGHTING_AZIMUTHAL_ANGLES,allImagesLoaded);dataset.listenForDrop(INPUT_DROP_AREA);dataset.listenForTestButtonClick(TEST_BUTTON);dataset.listenForWebcamButtonClick(CAPTURE_BUTTON,WEBCAM_RESOLUTION);
function allImagesLoaded(){INPUT_DROP_AREA.remove();WIDTH=dataset.getImageDimensions()[0];HEIGHT=dataset.getImageDimensions()[1];setTimeout(startCalculation,0)}function startCalculation(){LOG_ELEMENT.style.display="block";uiLog("Calculating normal map.");uiBaseLayer++;calculateNormalMap()}
function calculateNormalMap(){if(dataset.isOnlyNormalMap()){document.getElementById("vertex-color-albedo").remove();var a=NormalMap.getFromJsImageObject(dataset.getNormalMapImage());colorPixelArray=a.getAsPixelArray();calculatePointCloud(a)}else a=new NormalMap(dataset),a.calculate(calculatePointCloud.bind(null,a))}
function calculatePointCloud(a){uiBaseLayer--;uiLog("Calculating point cloud.");uiBaseLayer++;var c=DEPTH_FACTOR;IS_WEBCAM&&(c=WEBCAM_DEPTH_FACTOR);var b=Array(120).fill(null);let e=0;for(let d=0;d<b.length;d++)b[d]=e,e+=3;b=new PointCloud(a,WIDTH,HEIGHT,c,POINT_CLOUD_MAX_VERTEX_RESOLUTION,b,getColorPixelArray());NORMAL_MAP_BUTTON.addEventListener("click",downloadNormalMap.bind(null,a));POINT_CLOUD_BUTTON.addEventListener("click",downloadPointCloud.bind(null,b));LOADING_AREA.style.display="none";
OUTPUT_AREA.style.display="grid";c=new PointCloudRenderer(b,POINT_CLOUD_CANVAS_AREA);VERTEX_COLOR_SELECT.addEventListener("change",vertexColorSelectChanged.bind(null,c));b=new PointCloudChart(b,CHART_AREA);NORMAL_MAP_AREA.appendChild(a.getAsJsImageObject());setTimeout(c.startRendering.bind(c));setTimeout(b.load.bind(b));console.log("Finished.");LOG_ELEMENT.style.display="none"}function vertexColorSelectChanged(a){a.updateVertexColor(VERTEX_COLOR_SELECT.value)}
function downloadNormalMap(a){a.downloadAsImage(dataset.getObjectName()+"_"+NORMAL_MAP_FILE_SUFFIX)}function downloadPointCloud(a){a.downloadObj(dataset.getObjectName()+"_"+POINT_CLOUD_FILE_SUFFIX,getColorPixelArray())}let colorPixelArray=null;
function getColorPixelArray(){if(null===colorPixelArray){uiLog("Calculating albedo.");uiBaseLayer++;let c=new Shader;c.bind();var a=[];for(let b=0;b<LIGHTING_AZIMUTHAL_ANGLES.length;b++)a.push(GlslImage.load(dataset.getImage(LIGHTING_AZIMUTHAL_ANGLES[b])));a=a[0].maximum(...a);colorPixelArray=GlslRendering.render(a).getPixelArray();c.purge()}return colorPixelArray};